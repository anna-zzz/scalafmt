40 columns                              |
<<< trait start new lines
object A {
      val x = 1;
  trait B {
    type X = Int
  }
  class C extends B
}
>>>
object A {
  val x = 1;
  trait B {
    type X = Int
  }
  class C extends B
}
<<< mod protected
protected [scalafmt] sealed trait UnitTestStyle
>>>
protected[scalafmt] sealed trait UnitTestStyle
<<< self type
  trait Cap extends Util {
    self =>
object Foo {
x
}

    val x: Int => Int =  { y =>
      y + 1
    }
    }
>>>
trait Cap extends Util { self =>
  object Foo {
    x
  }

  val x: Int => Int = { y =>
    y + 1
  }
}
